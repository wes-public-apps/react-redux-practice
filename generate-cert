# !/bin/bash

# generate-cert <project name> <CA name> <path for CA data>

######################
# Become a Certificate Authority
######################
CAPath=$3
CAName=$2

#if CA directory does not exist create a new one
if [ ! -d "$CAPath" ]; then
	echo "Directory does not exist"
	mkdir $CAPath
fi

#if CA file does not exist create a new one
if [[ ! -e $CAPath/$CAName.key ]]; then
	echo "File not found"
    	# Generate private key
	openssl genrsa -des3 -out $CAPath/$CAName.key 2048
	# Generate root certificate
	openssl req -x509 -new -nodes -key $CAPath/$CAName.key -sha256 -days 825 -out $CAPath/$CAName.pem
fi

######################
# Create CA-signed certs
######################
NAME=$1
# Generate a private key
openssl genrsa -out $NAME.key 2048
# Create a certificate-signing request
openssl req -new -key $NAME.key -out $NAME.csr
# Create a config file for the extensions
>$NAME.ext cat <<-EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = localhost
DNS.2 = dev-client
DNS.3 = dev-server
IP.1=127.0.0.1
IP.2=172.20.0.3
IP.3=172.20.0.2
EOF
# Create the signed certificate
openssl x509 -req -in $NAME.csr -CA $CAPath/$CAName.pem -CAkey $CAPath/$CAName.key -CAcreateserial \
-out $NAME.crt -days 825 -sha256 -extfile $NAME.ext
